cmake_minimum_required(VERSION 3.0)
project(BeefSystem)

# Set the paths to the CMake config files for SDL2 and SDL2_image
set(SDL2_DIR "C:/Users/emilx/Documents/SDL2 Dev/SDL2-2.28.1/cmake")
set(SDL2_image_DIR "C:/Users/emilx/Documents/SDL2 Dev/SDL2_image-devel-2.6.3-VC/SDL2_image-2.6.3/cmake")

# Create an option to switch between a system SDL library and a vendored SDL library
option(MYGAME_VENDORED "Use vendored libraries" OFF)

if(MYGAME_VENDORED)
    add_subdirectory(vendored/sdl EXCLUDE_FROM_ALL)
else()
    # Look for the SDL2 package and the SDL2main component
    find_package(SDL2 REQUIRED CONFIG REQUIRED COMPONENTS SDL2)
    find_package(SDL2 REQUIRED CONFIG COMPONENTS SDL2main)
    find_package(SDL2_image REQUIRED PATHS ${SDL2_IMAGE_CMAKE_PREFIX_PATH})
endif()

# Include directories for SDL2 and SDL2_image
include_directories(${SDL2_INCLUDE_DIRS} ${SDL2_IMAGE_INCLUDE_DIRS})

# Set the CMake toolchain file to the path generated by vcpkg
set(CMAKE_TOOLCHAIN_FILE "-DCMAKE_TOOLCHAIN_FILE=C:/dev/vcpkg/scripts/buildsystems/vcpkg.cmake")

# Use glob to get a list of all cpp files in the current directory
file(GLOB SOURCES "*.cpp")

# Create the executable
add_executable(BeefSystem main.cpp ${SOURCES})

# Copy the assets to the build directory during build
add_custom_target(copy_assets
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/assets ${CMAKE_BINARY_DIR}/assets
)

# Copy assets before building the main executable
add_custom_command(
    TARGET BeefSystem POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    ${CMAKE_SOURCE_DIR}/assets
    $<TARGET_FILE_DIR:BeefSystem>/assets
    DEPENDS copy_assets
)

# Link to the actual SDL2 library
target_link_libraries(BeefSystem PRIVATE SDL2::SDL2 SDL2_image::SDL2_image)

if(TARGET SDL2::SDL2main)
    # Link SDL2main if available
    target_link_libraries(BeefSystem PRIVATE SDL2::SDL2main)
endif()

# Set the build type to Debug (or Release, etc.)
set(CMAKE_BUILD_TYPE Debug)
